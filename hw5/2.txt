<?php

class RedisCacheProvider {
    protected function __clone() { }
	
	private static $instance = null;
	private $connection = null;

    private function __construct() {
        if(!$this->connection){
            $this->connection = new Redis();
            $this->connection->connect(REDIS_SERVER, REDIS_PORT);
        }
        return self;
    }

    public static function getInstance() {
        if(!self::$instance) {
            self::$instance = new RedisCacheProvider();
        }
   
        return self::$instance;
    }

    public function get($key){
        $result = false;
        if($c = $this->connection){
            $result = unserialize($c->get($key));
        }
        return $result;
    }

    public function set($key, $value, $time=0){
        if($c=$this->connection){
            $c->set($key, serialize($value), $time);
        }
    }

    public function del($key){
        if($c=$this->connection){
            $c->delete($key);
        }
    }

    public function clear(){
        if($c=$this->connection){
            $c->flushDB();
        }
    }
}
